package view;

//import com.formdev.flatlaf.FlatLightLaf;
//import com.formdev.flatlaf.FlatLightLaf;
import java.sql.ResultSet;

import java.sql.SQLException;
import javax.swing.JOptionPane;
import model.ConexaoDAO;
import model.Usuario;
import model.*;

//import view.Login;

public class Login extends javax.swing.JFrame {

    /**
     * Creates new form Login
     */
    public Login() {
       setResizable(false);
        initComponents();
        txtSenha_OLD.setVisible(false);
        txtUsuario_OLD.setVisible(false);
        txtUsuario.requestFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        txtUsuario_OLD = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtSenha_OLD = new javax.swing.JPasswordField();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btEntrar = new javax.swing.JButton();
        txtUsuario = new javax.swing.JTextField();
        txtSenha = new javax.swing.JPasswordField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtUsuarioCliente = new javax.swing.JTextField();
        txtSenhaCliente = new javax.swing.JPasswordField();
        btEntrarCliente = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sistema de Gerenciamento para Biblioteca - SGB - Login");

        jPanel1.setLayout(null);

        txtUsuario_OLD.setEnabled(false);
        txtUsuario_OLD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUsuario_OLDActionPerformed(evt);
            }
        });
        jPanel1.add(txtUsuario_OLD);
        txtUsuario_OLD.setBounds(50, 90, 90, 20);

        jLabel1.setForeground(new java.awt.Color(102, 102, 102));
        jLabel1.setText("Usuário");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(10, 270, 90, 16);

        txtSenha_OLD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSenha_OLD_OLDActionPerformed(evt);
            }
        });
        jPanel1.add(txtSenha_OLD);
        txtSenha_OLD.setBounds(50, 60, 90, 20);

        jLabel2.setForeground(new java.awt.Color(102, 102, 102));
        jLabel2.setText("Senha");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(220, 270, 100, 16);

        jLabel5.setFont(new java.awt.Font("Corbel Light", 3, 24)); // NOI18N
        jLabel5.setText("Login Funcionário");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(150, 40, 180, 30);

        btEntrar.setText("Entrar");
        btEntrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEntrarActionPerformed(evt);
            }
        });
        jPanel1.add(btEntrar);
        btEntrar.setBounds(430, 290, 80, 30);
        jPanel1.add(txtUsuario);
        txtUsuario.setBounds(10, 290, 190, 30);
        jPanel1.add(txtSenha);
        txtSenha.setBounds(220, 290, 190, 30);

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Livro.png"))); // NOI18N
        jPanel1.add(jLabel13);
        jLabel13.setBounds(160, 60, 122, 158);

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/SGB3.png"))); // NOI18N
        jPanel1.add(jLabel14);
        jLabel14.setBounds(270, 130, 120, 40);

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/sistema2.png"))); // NOI18N
        jPanel1.add(jLabel15);
        jLabel15.setBounds(70, 190, 320, 60);

        jTabbedPane1.addTab("Login funcionário", jPanel1);

        jPanel2.setLayout(null);

        jLabel3.setForeground(new java.awt.Color(102, 102, 102));
        jLabel3.setText("Usuário");
        jPanel2.add(jLabel3);
        jLabel3.setBounds(10, 270, 110, 16);

        jLabel4.setForeground(new java.awt.Color(102, 102, 102));
        jLabel4.setText("Senha");
        jPanel2.add(jLabel4);
        jLabel4.setBounds(220, 270, 100, 16);
        jPanel2.add(txtUsuarioCliente);
        txtUsuarioCliente.setBounds(10, 290, 190, 30);
        jPanel2.add(txtSenhaCliente);
        txtSenhaCliente.setBounds(220, 290, 190, 30);

        btEntrarCliente.setText("Entrar");
        btEntrarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEntrarClienteActionPerformed(evt);
            }
        });
        jPanel2.add(btEntrarCliente);
        btEntrarCliente.setBounds(430, 290, 80, 30);

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Livro.png"))); // NOI18N
        jPanel2.add(jLabel10);
        jLabel10.setBounds(160, 60, 122, 158);

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/SGB3.png"))); // NOI18N
        jPanel2.add(jLabel11);
        jLabel11.setBounds(270, 130, 120, 40);

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/sistema2.png"))); // NOI18N
        jPanel2.add(jLabel12);
        jLabel12.setBounds(70, 190, 320, 60);

        jLabel16.setFont(new java.awt.Font("Corbel Light", 3, 24)); // NOI18N
        jLabel16.setText("Login leitor");
        jPanel2.add(jLabel16);
        jLabel16.setBounds(170, 40, 152, 23);

        jTabbedPane1.addTab("Login Cliente", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 517, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 409, Short.MAX_VALUE)
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(539, 429));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btEntrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEntrarActionPerformed
//        Usuario usuario = new Usuario();
//        usuario.setUsuario(txtUsuario.getText());
//        usuario.setSenha(txtSenha.getText());
//
//        if ("jeff".equals(usuario.getUsuario()) && "123".equals(usuario.getSenha())) {
//
//            TelaPrincipal tela = new TelaPrincipal();
//
//            tela.setVisible(true);
//           // setUndecorated(true);
//            dispose();
//        } else {
//            JOptionPane.showMessageDialog(null, "Usuário e senha inválidos.");
//        }

//        String senha = new String (txtSenha.getPassword());
//        String senha = new String(txtSenha_OLD.getPassword());
        String senha = new String(txtSenha.getPassword());

//        if ("".equals(txtUsuario_OLD.getText())) {
        if ("".equals(txtUsuario.getText())) {
            JOptionPane.showMessageDialog(null, "Digite o nome do usuário", "ATENÇÃO!", JOptionPane.ERROR_MESSAGE);

        } else if ("".equals(senha)) {
            JOptionPane.showMessageDialog(null, "Digite a senha do usuário", "ATENÇÃO!", JOptionPane.ERROR_MESSAGE);

        } else {

            ConexaoDAO conexaoDao = new ConexaoDAO();
            try {
                ResultSet rs;

                Usuario usuario = new Usuario();

                usuario.setNomeUsuario(txtUsuario.getText());
//                usuario.setNomeUsuario(txtUsuario_OLD.getText());
                usuario.setSenha(String.valueOf(txtSenha.getPassword()));
//                usuario.setSenha(String.valueOf(txtSenha_OLD.getPassword()));

                UsuarioDAO usuarioDAO = new UsuarioDAO();

                rs = usuarioDAO.autenticacaoUsuario(usuario);
                if (rs.next()) {

                    String logado = new String(txtUsuario.getText());
//                    String logado = new String(txtUsuario_OLD.getText());
                    // Dao dao = new Dao();
                    model.LoginUsuario logar = new model.LoginUsuario();
                    logar.setLogado(logado);
                    //logado = dao.usuarioLogado(l);

//                    new TelaPrincipal().setVisible(true);
                    logLogin();// CHAMA O METODO PARA GRAVAR NO BD O USUÁRIO LOGADO
                    new Tela().setVisible(true);
                    dispose();
                    conexaoDao.desconectar();

                } else {
                    JOptionPane.showMessageDialog(null, "Usuário ou senha inválido.", "ATENÇÃO!", JOptionPane.ERROR_MESSAGE);
                    txtUsuario.setText(null);
                    txtSenha.setText(null);
                    txtUsuario.requestFocus();
                    conexaoDao.desconectar();
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Erro ao tentar logar no sistema.", "ATENÇÃO!", JOptionPane.ERROR_MESSAGE);
                conexaoDao.desconectar();

            }

        }
    }//GEN-LAST:event_btEntrarActionPerformed

    public void logLogin() {
        //            Editora editora = new Editora(txtEditora.getText());
        Log log = new Log(txtUsuario.getText());

        Dao dao = new Dao();

        int resp;
        boolean status;

        status = dao.conectar();
        if (status == false) {
            JOptionPane.showMessageDialog(null, "Erro ao conectar com o servidor.", "ATENÇÃO!", JOptionPane.ERROR_MESSAGE);

        } else {
            resp = dao.salvarLog(log);
            if (resp == 1) {
                //JOptionPane.showMessageDialog(null, "usuário cadastrada com sucesso!");

            } else if (resp == 1062) {
                // JOptionPane.showMessageDialog(null, "Matricula já cadastrada.", "ATENÇÃO!", JOptionPane.ERROR_MESSAGE);

            } else {
                JOptionPane.showMessageDialog(null, "Erro ao tentar salvar os dados (LOG).");
            }
            dao.desconectar();
        }
    }


    private void btEntrarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEntrarClienteActionPerformed
        String senha = new String(txtSenhaCliente.getPassword());

        if ("".equals(txtUsuarioCliente.getText())) {
            JOptionPane.showMessageDialog(null, "Digite seu usuário", "ATENÇÃO!", JOptionPane.ERROR_MESSAGE);

        } else if ("".equals(senha)) {
            JOptionPane.showMessageDialog(null, "Digite sua senha", "ATENÇÃO!", JOptionPane.ERROR_MESSAGE);

        } else {

            ConexaoDAO conexaoDao = new ConexaoDAO();
            try {
                ResultSet rs;

//              Usuario usuario = new Usuario();
                Leitor leitor = new Leitor();

                leitor.setUsuario(txtUsuarioCliente.getText());
                leitor.setSenha(String.valueOf(txtSenhaCliente.getPassword()));

//                UsuarioDAO usuarioDAO = new UsuarioDAO();
                ClienteDao clienteDAO = new ClienteDao();

                rs = clienteDAO.autenticacaoCliente(leitor);
                if (rs.next()) {

                    String logado = new String(txtUsuarioCliente.getText());
                    // Dao dao = new Dao();
                    model.LoginCliente logar = new model.LoginCliente();
//                    model.LoginUsuario logar = new model.LoginUsuario();
                    logar.setClienteLogado(logado);
                    //logado = dao.usuarioLogado(l);

//                    new TelaPrincipal().setVisible(true);
                    logLoginCliente();
                    new TelaCliente().setVisible(true);
                    dispose();
                    conexaoDao.desconectar();

                } else {
                    JOptionPane.showMessageDialog(null, "Usuário ou senha inválido.", "ATENÇÃO!", JOptionPane.ERROR_MESSAGE);
                    conexaoDao.desconectar();
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Erro ao tentar logar no sistema.", "ATENÇÃO!", JOptionPane.ERROR_MESSAGE);
                conexaoDao.desconectar();

            }
        }
        
    }//GEN-LAST:event_btEntrarClienteActionPerformed
    public void logLoginCliente() {
        //            Editora editora = new Editora(txtEditora.getText());
        Log log = new Log(txtUsuarioCliente.getText());

        Dao dao = new Dao();

        int resp;
        boolean status;

        status = dao.conectar();
        if (status == false) {
            JOptionPane.showMessageDialog(null, "Erro ao conectar com o servidor.", "ATENÇÃO!", JOptionPane.ERROR_MESSAGE);

        } else {
            resp = dao.salvarLog(log);
            if (resp == 1) {
                //JOptionPane.showMessageDialog(null, "usuário cadastrada com sucesso!");

            } else if (resp == 1062) {
                // JOptionPane.showMessageDialog(null, "Matricula já cadastrada.", "ATENÇÃO!", JOptionPane.ERROR_MESSAGE);

            } else {
                JOptionPane.showMessageDialog(null, "Erro ao tentar salvar os dados (LOG).");
            }
            dao.desconectar();
        }
    }
    
    private void txtUsuario_OLDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUsuario_OLDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUsuario_OLDActionPerformed

    private void txtSenha_OLD_OLDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSenha_OLD_OLDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSenha_OLD_OLDActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
     
//        FlatLightLaf.setup();//TEMA
        

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btEntrar;
    private javax.swing.JButton btEntrarCliente;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPasswordField txtSenha;
    private javax.swing.JPasswordField txtSenhaCliente;
    private javax.swing.JPasswordField txtSenha_OLD;
    private javax.swing.JTextField txtUsuario;
    private javax.swing.JTextField txtUsuarioCliente;
    private javax.swing.JTextField txtUsuario_OLD;
    // End of variables declaration//GEN-END:variables

}
